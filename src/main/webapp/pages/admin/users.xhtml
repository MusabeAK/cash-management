<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/pages/template/template.xhtml">
    <ui:define name="content" class="form-container">
        <f:event type="preRenderComponent" listener="#{navigationBean.updateActivePage}" />

        <script type="text/javascript">
            function handleAddUserOnClick(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('addUserDialog').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    return;
                }

                // If no validation errors or error messages, hide the dialog
                PF('addUserDialog').hide();
            }

            function handleEditUserOnClick(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('editUserDialog').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    return;
                }

                // If no validation errors or error messages, hide the dialog
                PF('editUserDialog').hide();
            }

            function addRoleOnClick(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('editRoleDialog').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    return;
                }

                // If no validation errors or error messages, hide the dialog
                PF('editRoleDialog').hide();
            }

            function editRoleOnClick(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('editRoleDialog').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    return;
                }

                // If no validation errors or error messages, hide the dialog
                PF('editRoleDialog').hide();
            }

        </script>
        <f:event type="preRenderComponent" listener="#{navigationBean.updateActivePage}" />

        <h:panelGroup layout="block" styleClass="top-bar">
            <span class="menu-icon" onclick="toggleNav()">&#9776;</span>
            <h:outputText value="Users" styleClass="top-bar-title" />
        </h:panelGroup>

        <div class="content">
            <h:form id="usersForm">
<!--                <p:growl id="growl" showDetail="true" life="2000"  />-->
                <p:confirmDialog global="true" showEffect="fade" hideEffect="fade" responsive="true"
                                 width="350">
                    <p:commandButton value="No" type="button"
                                     styleClass="ui-confirmdialog-no ui-button-flat"/>
                    <p:commandButton value="Yes" type="button" styleClass="ui-confirmdialog-yes" update=":usersForm:usersTable :usersForm:rolesTable"/>
                </p:confirmDialog>

                <div class="cards-container">
                    <div class="card">
                        <i class="pi pi-key card-icon"/>
                        <div class="card-content">
                            <h:outputText value="Total Amount Disbursed(UGX)" styleClass="card-title"/>
                            <h:outputText value="#{requisitionBean.totalAmountDisbursed}" styleClass="card-number"/>
                        </div>
                    </div>
                    <div class="card">
                        <i class="pi pi-key card-icon"/>
                        <div class="card-content">
                            <h:outputText value="Number of Registered Users" styleClass="card-title"/>
                            <h:outputText id="card1" value="#{userBean.users.size()}" styleClass="card-number"/>
                        </div>
                    </div>

                    <div class="card">
                        <i class="pi pi-users card-icon"/>
                        <div class="card-content">
                            <h:outputText value="Active Budget Lines" styleClass="card-title"/>
                            <h:outputText value="#{budgetLineCategoryManagedBean.activeBudgetLineCount}" styleClass="card-number"/>
                        </div>
                    </div>
                </div>

                <div style="margin-bottom: 20px">

                </div>
                <p:growl showDetail="false" closable="true" severity="error, info" showSummary="true" life="3500">
                    <p:autoUpdate/>
                </p:growl>

                <h:panelGroup id="usersTable" rendered="#{userPermissionBean.hasPermission('VIEW_USERS')}">

                    <div class="search-container">
                        <h3>All users</h3>
                        <div class="search-and-filter">
                            <div class="search">
                                <p:inputText id="searchBar" rendered="#{loginBean.hasPermission('SEARCH_USERS')}" value="#{userBean.searchQuery}" styleClass="search-bar" placeholder="Search...">
                                    <p:ajax event="keyup" update=":usersForm:usersTable @form" listener="#{userBean.searchUsers}"/>
                                </p:inputText>
                            </div>
                            <div class="filter">
                                <h:selectOneMenu value="#{userBean.selectedGender}" rendered="#{loginBean.hasPermission('VIEW_ROLES')}" styleClass="gender-filter">
                                    <f:selectItem itemLabel="Gender" itemValue="" />
                                    <f:selectItems value="#{userBean.availableGenders}" var="role" itemLabel="#{role}" itemValue="#{role}" />
                                    <p:ajax event="change" update=":usersForm:usersTable @form" listener="#{userBean.filterUsersByGender}"/>
                                </h:selectOneMenu>
                            </div>
                            <div class="filter">
                                <h:selectOneMenu value="#{userBean.selectedRole}" rendered="#{loginBean.hasPermission('VIEW_ROLES')}" styleClass="gender-filter">
                                    <f:selectItem itemLabel="Role" itemValue="" />
                                    <f:selectItems value="#{userBean.availableRoles}" var="role" itemLabel="#{role}" itemValue="#{role}" />
                                    <p:ajax event="change" update=":usersForm:usersTable @form" listener="#{userBean.filterUsersByRole}"/>
                                </h:selectOneMenu>
                            </div>
                            <div class="filter">
                                <h:selectOneMenu value="#{userBean.selectedPermission}" rendered="#{loginBean.hasPermission('VIEW_ROLES')}" styleClass="gender-filter">
                                    <f:selectItem itemLabel="PERMISSION" itemValue="" />
                                    <f:selectItems value="#{userBean.availablePermissions}" var="permission" itemLabel="#{permission}" itemValue="#{permission}" />
                                    <p:ajax event="change" update=":usersForm:usersTable" listener="#{userBean.filterUsersByPermission}"/>
                                </h:selectOneMenu>
                            </div>
                        </div>
                    </div>

                    <div class="table-header">
                        <h:outputText value="#{userBean.users.size()} User(s)" styleClass="total-users"/>
                        <div class="table-header-buttons">
                            <p:commandButton icon="pi pi-user-plus" value="Add User" styleClass="add-button" oncomplete="PF('addUserDialog').show()" rendered="#{userPermissionBean.hasPermission('CREATE_USER')}" update=":addUserForm :usersForm:card1"/>

                            <p:commandButton icon="pi pi-trash" update="card1" value="Delete All" action="#" styleClass="delete-all-button" rendered="#{userPermissionBean.hasPermission('DELETE_USER')}">
                                <p:confirm header="Confirm Deletion" message="Do you want to delete all Users?"
                                           icon="pi pi-info-circle"/>
                            </p:commandButton>
                        </div>
                    </div>

                    <p:dataTable value="#{userBean.filteredUsers}" rendered="#{loginBean.hasPermission('VIEW_USERS')}" var="user" paginator="true" rows="5" paginatorPosition="bottom" rowIndexVar="rowIndex">

                        <p:column headerText="No.">
                            <h:outputText value="#{rowIndex + 1}" />
                        </p:column>

                        <p:column headerText="User Name">
                            <h:outputText value="#{user.username}"/>
                        </p:column>

                        <p:column headerText="First Name">
                            <h:outputText value="#{user.firstName}"/>
                        </p:column>

                        <p:column headerText="Last Name">
                            <h:outputText value="#{user.lastName}"/>
                        </p:column>

                        <p:column headerText="Email">
                            <h:outputText value="#{user.email}">
                            </h:outputText>
                        </p:column>

                        <p:column headerText="Phone Number">
                            <h:outputText value="#{user.phoneNumber}">
                            </h:outputText>
                        </p:column>

                        <p:column headerText="Gender">
                            <h:outputText value="#{user.gender}"/>
                        </p:column>

                        <p:column headerText="Role">
                            <h:outputText value="#{user.role.getName()}"/>
                        </p:column>

                        <p:column headerText="Actions" rendered="#{userPermissionBean.hasPermission('EDIT_USER') or userPermissionBean.hasPermission('DELETE_USER')}">
                            <p:commandButton icon="pi pi-pencil" styleClass="edit-button" action="#{userBean.setSelectedUser(user)}" oncomplete="PF('editUserDialog').show();" rendered="#{userPermissionBean.hasPermission('EDIT_USER')}" update=":usersForm:usersTable :editUserForm:editUserPanel"/>

                            <p:commandButton icon="pi pi-trash" action="#{userBean.deleteUser(user)}" title="Delete" styleClass="delete-button" style="color:red" rendered="#{userPermissionBean.hasPermission('DELETE_USER')}" update=":usersForm:usersTable">
                                <p:confirm header="Confirm Deletion" message="Do you want to delete this User?"
                                           icon="pi pi-info-circle"/>
                            </p:commandButton>
                        </p:column>

                    </p:dataTable>

                </h:panelGroup>
            </h:form>

        </div>

        <h:form id="addUserForm">
            <p:dialog header="Add New User."
                      widgetVar="addUserDialog"
                      modal="true"
                      resizable="true"
                      showEffect="fade"
                      hideEffect="fade"
                      closable="true"
                      maximizable="true"
                      minimizable="true"
                      minWidth="600"
                      visible="#{facesContext.validationFailed}">
                <p:outputPanel id="addUserPanel" rendered="true">
                    <p:messages id="addUserPanelMessages" showDetail="false" closable="true" severity="error, info" showSummary="true">
                        <p:autoUpdate/>
                    </p:messages>
                    <p:panelGrid columns="2" styleClass="custom-grid" >

                        <p:outputLabel for="newUserName" value="User Name" >
                            <div style="height: 8px">

                            </div>
                            <p:inputText id="newUserName" value="#{userBean.username}" required="true" requiredMessage="Username is required" validatorMessage="Invalid username" label="Username" autocomplete="off">
                                <f:validateRegex pattern="[a-zA-Z0-9_]*"/>
                                <f:validateLength minimum="3" maximum="16"/>
                                <f:validateRequired/>
                            </p:inputText>
                        </p:outputLabel>

                        <p:outputLabel for="firstName" value="First Name">
                            <div style="height: 8px">

                            </div>
                            <p:inputText id="firstName" value="#{userBean.firstName}" required="true" requiredMessage="First name is required" validatorMessage="Invalid first name" label="First name">
                                <f:validateRegex pattern="[a-zA-Z]*"/>
                                <f:validateLength minimum="3" maximum="32"/>
                                <f:validateRequired/>
                            </p:inputText>
                        </p:outputLabel>

                        <p:outputLabel for="lastName" value="Last Name">
                            <div style="height: 8px">
                            </div>
                            <p:inputText id="lastName" value="#{userBean.lastName}" rendered="true" required="true" requiredMessage="Last name is required" validatorMessage="Invalid last name" label="Last Name">
                                <f:validateRegex pattern="[a-zA-Z]*"/>
                                <f:validateLength minimum="3" maximum="32"/>
                                <f:validateRequired/>
                            </p:inputText>

                        </p:outputLabel>

                        <p:outputLabel for="email" value="Email:">
                            <div style="height: 8px">

                            </div>
                            <p:inputText id="email" value="#{userBean.email}" validatorMessage="Invalid email address" required="true" requiredMessage="Email is required">
                                <f:validateRegex pattern="([^.@]+)(\.[^.@]+)*@([^.@]+\.)+([^.@]+)"/>
                            </p:inputText>
                        </p:outputLabel>

                        <p:outputLabel for="password" value="Password">
                            <div style="height: 8px">

                            </div>
                            <p:password id="password" value="#{userBean.password}" required="true" requiredMessage="Password is required" />
                        </p:outputLabel>

                        <p:outputLabel for="role" value="Role">
                            <div style="height: 8px">

                            </div>
                            <p:selectOneMenu id="role" value="#{userBean.roleName}" required="true" requiredMessage="Please choose a role">
                                <f:selectItem itemLabel="Select Role" itemValue="" />
                                <f:selectItems value="#{userBean.availableRoles}" var="role" itemLabel="#{role}" itemValue="#{role}"/>
                            </p:selectOneMenu>
                        </p:outputLabel>

                        <p:outputLabel for="phone" value="Phone Number">
                            <div style="height: 8px">

                            </div>
                            <p:inputText id="phone" value="#{userBean.phoneNumber}"  />
                        </p:outputLabel>

                        <p:outputLabel for="gender" value="Gender">
                            <div style="height: 8px">

                            </div>
                            <p:selectOneMenu id="gender" value="#{userBean.gender}" required="true" requiredMessage="Please choose a gender">
                                <f:selectItem itemLabel="Select Gender" itemValue="" />
                                <f:selectItems value="#{userBean.availableGenders}" var="gender" itemLabel="#{gender}" itemValue="#{gender}"/>
                            </p:selectOneMenu>
                        </p:outputLabel>


                    </p:panelGrid>

                    <p:commandButton value="Add" oncomplete="handleAddUserOnClick(xhr, status, args)" update=":usersForm:usersTable :addUserForm:addUserPanel :usersForm:card1" actionListener="#{userBean.registerUser}" icon="pi pi-check" styleClass="custom-button1"/>
                    <p:commandButton value="Cancel" onclick="PF('addUserDialog').hide();" icon="pi pi-times" styleClass="custom-button2"/>
                </p:outputPanel>
            </p:dialog>
        </h:form>

        <h:form id="editUserForm">
            <p:dialog header="Update #{userBean.selectedUser.getUsername()}"
                      widgetVar="editUserDialog"
                      modal="true"
                      resizable="true"
                      showEffect="fade"
                      hideEffect="fade"
                      minHeight="410"
                      closable="true"
                      maximizable="true"
                      minimizable="true"
                      minWidth="600"
                      visible="#{facesContext.validationFailed}">
                <p:outputPanel id="editUserPanel" rendered="true">
                    <p:growl id="editUserPanelMessages" showDetail="false" closable="true" severity="error, info" showSummary="true" life="3500">
                        <p:autoUpdate/>
                    </p:growl>
                    <p:panelGrid columns="2" styleClass="custom-grid">
                        <p:outputLabel for="userName" value="User Name">
                            <div style="height: 8px">

                            </div>
                            <h:outputText id="userName" value="#{userBean.selectedUser.username}" >
                            </h:outputText>
                        </p:outputLabel>


                        <p:outputLabel for="efirstName" value="First Name">
                            <div style="height: 8px">

                            </div>
                            <p:inputText id="efirstName" value="#{userBean.selectedUser.firstName}" required="true" requiredMessage="First name is required" validatorMessage="Invalid first name">
                                <f:validateRegex pattern="[a-zA-Z]*"/>
                                <f:validateLength minimum="3" maximum="32"/>
                                <f:validateRequired/>
                            </p:inputText>
                        </p:outputLabel>

                        <p:outputLabel for="elastName" value="Last Name">
                            <div style="height: 8px">

                            </div>
                            <p:inputText id="elastName" value="#{userBean.selectedUser.lastName}" rendered="true" required="true" requiredMessage="Last name is required" validatorMessage="Invalid last name">
                                <f:validateRegex pattern="[a-zA-Z]*"/>
                                <f:validateLength minimum="3" maximum="32"/>
                                <f:validateRequired/>
                            </p:inputText>
                        </p:outputLabel>

                        <p:outputLabel for="eemail" value="Email:">
                            <div style="height: 8px">

                            </div>
                            <p:inputText id="eemail" value="#{userBean.selectedUser.email}" required="true" requiredMessage="Email address is required" validatorMessage="Invalid email address">
                                <f:validateRegex pattern="([^.@]+)(\.[^.@]+)*@([^.@]+\.)+([^.@]+)"/>
                            </p:inputText>
                        </p:outputLabel>



                        <p:outputLabel for="erole" value="Role">
                            <div style="height: 8px">

                            </div>
                            <p:selectOneMenu id="erole" value="#{userBean.newRole}" required="true" requiredMessage="Please choose a role" >
                                <f:selectItem itemLabel="Select Role" itemValue="" />
                                <f:selectItems value="#{userBean.availableRoles}" var="role" itemLabel="#{role}" itemValue="#{role}"/>
                            </p:selectOneMenu>
                        </p:outputLabel>

                        <p:outputLabel for="ephone" value="Phone Number">
                            <div style="height: 8px">

                            </div>
                            <p:inputText id="ephone" value="#{userBean.selectedUser.phoneNumber}"  />
                        </p:outputLabel>

                        <p:outputLabel for="egender" value="Gender:">
                            <div style="height: 8px">

                            </div>
                            <p:selectOneMenu id="egender" value="#{userBean.selectedUser.gender}" required="true" requiredMessage="Please choose a gender">
                                <f:selectItem itemLabel="Select Gender" itemValue="" />
                                <f:selectItems value="#{userBean.availableGenders}" var="gender" itemLabel="#{gender}" itemValue="#{gender}"/>
                            </p:selectOneMenu>
                        </p:outputLabel>

                    </p:panelGrid>

                    <p:commandButton value="Update" oncomplete="handleEditUserOnClick(xhr, status, args)" update=":usersForm:usersTable :editUserForm:editUserPanel :usersForm:card1" actionListener="#{userBean.updateUser}" icon="pi pi-check" styleClass="custom-button1"/>
                    <p:commandButton value="Cancel" onclick="PF('editUserDialog').hide();" icon="pi pi-times" styleClass="custom-button2"/>
                </p:outputPanel>
            </p:dialog>
        </h:form>


    </ui:define>

</ui:composition>