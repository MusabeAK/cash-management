<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/pages/template/template.xhtml">

    <ui:define name="content" class="form-container">
        <script type="text/javascript">
            function handleAddBudgetLineOnClick(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('addBudgetLineDialog').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    return;
                }

                // If no validation errors or error messages, hide the dialog
                PF('addBudgetLineDialog').hide();
            }

            function handleAddBudgetLineCategoryOnClick(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('addBudgetLineCategoryDialog').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    return;
                }

                // If no validation errors or error messages, hide the dialog
                PF('addBudgetLineCategoryDialog').hide();
            }

            function handleEditBudgetLineCategoryOnClick(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('editBudgetLineCategoryDialog').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    return;
                }

                // If no validation errors or error messages, hide the dialog
                PF('editBudgetLineCategoryDialog').hide();
            }

            function handleEditBudgetLineOnClick(xhr, status, args) {
                // Check if there are any error messages with severity 'error'
                var errorMessages = PF('editBudgetLineDialog').jq.find('.ui-messages-error');

                if (args.validationFailed || errorMessages.length > 0) {
                    // If there are validation errors or error messages, do not hide the dialog
                    return;
                }

                // If no validation errors or error messages, hide the dialog
                PF('editBudgetLineDialog').hide();
            }

        </script>
        <style type="text/css">
            .details-grid {
                width: 100%;
                margin-bottom: 20px;
            }

            .details-grid td {
                padding: 15px 10px;
            }

            .details-grid .ui-outputtext {
                margin-bottom: 10px;
            }

            .details-grid tr {
                height: 30px;
            }

            .full-width-panel {
                width: 100%;
                box-sizing: border-box;
                border: 1px solid #ddd;
                border-radius: 3px;
                margin-bottom: 20px;
                padding: 10px 10px 30px;
            }

            .panel-header {
                display: block;
                text-align: center;
                align-items: center;
                font-weight: bold;
                margin-bottom: 15px;
                text-decoration: underline;
            }

            .pipeline {
                width: 100%;
                position: relative;
            }

            .custom-progress {
                width: 100% !important;
                height: 20px !important;
            }

            .status-container {
                display: flex;
                justify-content: space-between;
                position: relative;
                height: 20px;
                margin-top: 5px;
            }

            .status {
                position: relative;
                text-align: center;
                font-size: 12px;
                width: 25%;
            }
        </style>
        <f:event type="preRenderComponent" listener="#{navigationBean.updateActivePage}" />

        <h:panelGroup layout="block" styleClass="top-bar">
            <span class="menu-icon" onclick="toggleNav()">&#9776;</span>
            <h:outputText value="Budget Lines" styleClass="top-bar-title" />
        </h:panelGroup>

        <div class="content">
            <h:form id="budgetLineCategoryForm">
                <p:confirmDialog global="true" showEffect="fade" hideEffect="fade" responsive="true"
                                 width="350">
                    <p:commandButton value="No" type="button"
                                     styleClass="ui-confirmdialog-no ui-button-flat"/>
                    <p:commandButton value="Yes" type="button" styleClass="ui-confirmdialog-yes" style="background-color: #EC1212 !important; border: #EC1212 !important;" update=":usersForm:usersTable"/>
                </p:confirmDialog>

                <div class="cards-container">
                    <h:panelGroup class="card">
                        <i class="pi pi-key card-icon"/>
                        <div class="card-content">
                            <h:outputText value="Total Amount Disbursed(UGX)" styleClass="card-title"/>
                            <h:outputText id="card1" value="#{requisitionBean.totalAmountDisbursed}" styleClass="card-number"/>
                        </div>
                    </h:panelGroup>
                    <h:panelGroup class="card">
                        <i class="pi pi-key card-icon"/>
                        <div class="card-content">
                            <h:outputText value="Total Balance in All Active Budget Lines" styleClass="card-title"/>
                            <h:outputText id="card2" value="#{budgetLineCategoryManagedBean.budgetLineSummedTotal}" styleClass="card-number"/>
                        </div>
                    </h:panelGroup>

                    <h:panelGroup class="card">
                        <i class="pi pi-users card-icon"/>
                        <div class="card-content">
                            <h:outputText value="Active Budget Lines" styleClass="card-title"/>
                            <h:outputText id="card3" value="#{budgetLineCategoryManagedBean.activeBudgetLineCount}" styleClass="card-number"/>
                        </div>
                    </h:panelGroup>
                </div>

                <p:growl showDetail="false" closable="true" severity="error, info" showSummary="true" life="3500">
                    <p:autoUpdate/>
                </p:growl>

                <h:panelGroup id="budgetLineCategoryTable" rendered="#{loginBean.hasPermission('VIEW_BUDGET_LINE_CATEGORY')}">
                    <div class="search-container">
                        <h3>All Budget Line Categories</h3>
                        <div class="search-and-filter">
                            <div class="search">
                                <p:inputText id="searchBar" value="#{budgetLineCategoryManagedBean.categorySearchQuery}" styleClass="search-bar" placeholder="Search...">
                                    <p:ajax event="keyup" update=":budgetLineCategoryForm:budgetLineCategoryTable" listener="#{budgetLineCategoryManagedBean.searchCategories}"/>
                                </p:inputText>
                            </div>
                        </div>
                    </div>

                    <div class="table-header">
                        <h:outputText id="card4" value="#{budgetLineCategoryManagedBean.filteredBudgetLineCategories.size()}#{budgetLineCategoryManagedBean.budgetLineCategoryStringLabel()}" styleClass="total-users"/>
                        <div class="table-header-buttons">
                            <p:commandButton icon="pi pi-plus" update=":budgetLineCategoryForm:budgetLineCategoryTable :addBudgetLineCategoryForm:addBudgetLineCategoryPanel" style="margin-right: 20px" value="Add Category" styleClass="add-button" oncomplete="PF('addBudgetLineCategoryDialog').show()" rendered="#{loginBean.hasPermission('CREATE_BUDGET_LINE_CATEGORY')}"/>

                        </div>
                    </div>

                    <p:dataTable value="#{budgetLineCategoryManagedBean.filteredBudgetLineCategories}" var="category" paginator="true" rows="3" paginatorPosition="bottom" rendered="#{loginBean.hasPermission('VIEW_BUDGET_LINE_CATEGORY')}">
                        <p:column headerText="ID">
                            <h:outputText value="#{budgetLineCategoryManagedBean.convertBudgetLineCategoryIdToString(category.id)}"/>
                        </p:column>
                        <p:column headerText="Category Name">
                            <h:outputText value="#{category.categoryName}"/>
                        </p:column>

                        <p:column headerText="Actions">
                            <p:commandButton icon="pi pi-pencil" styleClass="edit-button" action="#{budgetLineCategoryManagedBean.selectBudgetLineCategory(category)}" oncomplete="PF('editBudgetLineCategoryDialog').show();" update=":budgetLine:budgetLineTable :budgetLineCategoryForm:budgetLineCategoryTable :updateBudgetLineCategoryForm:editBudgetLineCategoryPanel :budgetLineCategoryForm:card4" rendered="#{loginBean.hasPermission('EDIT_BUDGET_LINE_CATEGORY')}"/>

                            <p:commandButton icon="pi pi-trash" rendered="#{loginBean.hasPermission('DELETE_BUDGET_LINE_CATEGORY')}" action="#{budgetLineCategoryManagedBean.deleteBudgetLineCategory(category)}" update="@form budgetLineCategoryForm :budgetLine:budgetLineTable :budgetLineCategoryForm:budgetLineCategoryTable :budgetLineCategoryForm:card4" title="Delete" styleClass="delete-button" style="color:red" >
                                <p:confirm header="Confirm Deletion" message="Do you want to delete this Budget Line Category?"
                                           icon="pi pi-info-circle"/>
                            </p:commandButton>
                        </p:column>
                    </p:dataTable>
                </h:panelGroup>

            </h:form>


            <h:form id="budgetLine" style="margin-top: 20px">
                <h:panelGroup id="budgetLineTable" rendered="#{loginBean.hasPermission('VIEW_BUDGET_LINES')}">

                    <div class="search-container">
                        <h3>All Budget Lines</h3>
                        <div class="search-and-filter">
                            <div class="search-and-filter">
                                <div class="search">
                                    <p:inputText id="budgetLineSearchBar" value="#{budgetLineCategoryManagedBean.searchQuery}" styleClass="search-bar" placeholder="Search...">
                                        <p:ajax event="keyup" update=":budgetLine:budgetLineTable" listener="#{budgetLineCategoryManagedBean.searchBudgetLines}"/>
                                    </p:inputText>
                                </div>
                                <div class="filter">
                                    <h:selectOneMenu value="#{budgetLineCategoryManagedBean.selectedStatus}" styleClass="gender-filter">
                                        <f:selectItem itemLabel="Status" itemValue="#{null}" />
                                        <f:selectItems value="#{budgetLineCategoryManagedBean.budgetLineStatuses}" var="status" itemLabel="#{status}" itemValue="#{status}" />
                                        <p:ajax event="change" update=":budgetLine:budgetLineTable" listener="#{budgetLineCategoryManagedBean.filterBudgetLinesByStatus}"/>
                                    </h:selectOneMenu>
                                </div>
                                <div class="filter">
                                    <h:selectOneMenu value="#{budgetLineCategoryManagedBean.selectedCategory}" styleClass="gender-filter">
                                        <f:selectItem itemLabel="Category" itemValue="#{null}" />
                                        <f:selectItems value="#{budgetLineCategoryManagedBean.uniqueBudgetLineCategories}" var="category" itemLabel="#{category.categoryName}" itemValue="#{category}" />
                                        <f:converter converterId="budgetLineCategoryConverter" />
                                        <p:ajax event="change" update=":budgetLine:budgetLinesTable" listener="#{budgetLineCategoryManagedBean.filterBudgetLinesByCategory}"/>
                                    </h:selectOneMenu>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="table-header">
                        <h:outputText value="#{budgetLineCategoryManagedBean.filteredBudgetLines.size()}#{budgetLineCategoryManagedBean.budgetLinesStringLabel()}" styleClass="total-users"/>
                        <div class="table-header-buttons">
                            <p:commandButton icon="pi pi-plus" action="#{budgetLineCategoryManagedBean.loadBudgetLineCategories}" update=":budgetLine:budgetLineTable :addBudgetLineForm:addBudgetPanel" rendered="#{loginBean.hasPermission('CREATE_BUDGET_LINE')}" style="margin-right: 20px" value="Add Budget Line" styleClass="add-button" oncomplete="PF('addBudgetLineDialog').show()"/>

                        </div>
                    </div>

                    <p:dataTable value="#{budgetLineCategoryManagedBean.filteredBudgetLines}"
                                 rendered="#{loginBean.hasPermission('VIEW_BUDGET_LINES')}"
                                 var="budgetLine"
                                 paginator="true"
                                 rows="5"
                                 selection="#{budgetLineCategoryManagedBean.selectedBudgetLine}"
                                 selectionMode="single"
                                 rowKey="#{budgetLine.id}"
                                 id="budgetLinesTable"
                                 paginatorPosition="bottom">
                        <p:ajax event="rowSelect" process="budgetLinesTable" listener="#{budgetLineCategoryManagedBean.rowSelect}" update=":reviewBudgetLineForm:reviewBudgetLinePanel" oncomplete="PF('reviewBudgetLineDialog').show();" />


                        <p:column headerText="Id">
                            <h:outputText value="#{budgetLineCategoryManagedBean.convertBudgetLineIdToString(budgetLine.id)}"/>
                        </p:column>


                        <p:column headerText="Title">
                            <h:outputText value="#{budgetLine.title}"/>
                        </p:column>

                        <p:column headerText="Initial Amount">
                            <h:outputText value="#{budgetLine.initialAmount}"/>
                        </p:column>

                        <p:column headerText="Current Balance">
                            <h:outputText value="#{budgetLine.balance}"/>
                        </p:column>

                        <p:column headerText="Start Date">
                            <h:outputText value="#{budgetLine.startDate}">
                                <f:convertDateTime pattern="dd-MM-yyyy" timeZone="Africa/Kampala"/>
                            </h:outputText>
                        </p:column>

                        <p:column headerText="End Date">
                            <h:outputText value="#{budgetLine.endDate}">
                                <f:convertDateTime pattern="dd-MM-yyyy" timeZone="Africa/Kampala"/>
                            </h:outputText>
                        </p:column>

                        <p:column headerText="Status">
                            <h:outputText value="#{budgetLine.status}"/>
                        </p:column>

                        <p:column headerText="Budget Line Category">
                            <h:outputText value="#{budgetLine.budgetLineCategory.categoryName}"/>
                        </p:column>

                        <p:column headerText="Actions" rendered="#{loginBean.hasPermission('EDIT_BUDGET_LINE') or loginBean.hasPermission('DELETE_BUDGET_LINE')}">
                            <p:commandButton icon="pi pi-pencil" rendered="#{loginBean.hasPermission('EDIT_BUDGET_LINE') and budgetLine.status == 'DRAFT'}" styleClass="edit-button" action="#{budgetLineCategoryManagedBean.selectBudgetLine(budgetLine)}" oncomplete="PF('editBudgetLineDialog').show();" update="@form :budgetLine:budgetLineTable :updateBudgetLineCategoryForm:editBudgetLineCategoryPanel :updateBudgetLineForm:editBudgetLinePanel :budgetLineCategoryForm:card2 :budgetLineCategoryForm:card3"/>

                            <p:commandButton icon="pi pi-trash" styleClass="delete-button" rendered="#{loginBean.hasPermission('DELETE_BUDGET_LINE')}" action="#{budgetLineCategoryManagedBean.deleteBudgetLine(budgetLine)}" update="@form :budgetLine:budgetLineTable :budgetLineCategoryForm:card2 :budgetLineCategoryForm:card3" >
                                <p:confirm header="Confirm Deletion" message="Do you want to delete this Budget Line?"
                                           icon="pi pi-info-circle"/>
                            </p:commandButton>

                        </p:column>

                    </p:dataTable>
                </h:panelGroup>
            </h:form>

            <!-- Dialogs -->

            <h:form id="addBudgetLineForm">
                <p:dialog header="Add New Budget Line."
                          widgetVar="addBudgetLineDialog"
                          modal="true"
                          resizable="true"
                          showEffect="fade"
                          hideEffect="fade"
                          closable="true"
                          maximizable="true"
                          minimizable="true"
                          minWidth="800"
                          width="600px"
                          visible="#{facesContext.validationFailed}">
                    <p:outputPanel id="addBudgetPanel" rendered="true">

                        <p:messages id="addBudgetPanelMessages" showDetail="false" closable="true" severity="error, info" showSummary="true">
                            <p:autoUpdate/>
                        </p:messages>

                        <p:panelGrid columns="2" styleClass="custom-grid" >
                            <p:outputLabel for="budgetLineCategoryName" value="Budget Line Category: "/>
                            <p:autoComplete id="budgetLineCategoryName" value="#{budgetLineCategoryManagedBean.budgetLineCategoryName}" completeMethod="#{budgetLineCategoryManagedBean.budgetLineCategoryList}" required="true" requiredMessage="Budget Line Category is required">
                            </p:autoComplete>

                            <p:outputLabel for="budgetLineName" value="Budget Line Title: "/>
                            <p:inputText id="budgetLineName" value="#{budgetLineCategoryManagedBean.newBudgetLine.title}" required="true" requiredMessage="Budget Line Title is required" validatorMessage="Invalid Title">
                                <f:validateLength minimum="3" maximum="32"/>
                            </p:inputText>

                            <p:outputLabel for="budgetLineAmount" value="Budget Line Amount: "/>
                            <p:inputText id="budgetLineAmount" placeholder="UGX..." value="#{budgetLineCategoryManagedBean.newBudgetLine.initialAmount}" required="true" requiredMessage="Add an amount" validatorMessage="Amount must be a number">
                                <f:convertNumber/>
                            </p:inputText>

                            <p:outputLabel for="budgetLineStartDate" value="Start Date: "  />
                            <p:datePicker id="budgetLineStartDate" value="#{budgetLineCategoryManagedBean.newBudgetLine.startDate}" pattern="dd-MM-yyyy" showOnFocus="true" showTime="false" timeInput="false" required="true" requiredMessage="Please add a budget line start date"/>

                            <p:outputLabel for="budgetLineEndDate" value="End Date: "  />
                            <p:datePicker id="budgetLineEndDate" value="#{budgetLineCategoryManagedBean.newBudgetLine.endDate}" pattern="dd-MM-yyyy" showOnFocus="true" showTime="false" timeInput="false" required="true" requiredMessage="Please add a budget line end date"/>

                        </p:panelGrid>

                        <p:commandButton value="Add" styleClass="custom-button1" oncomplete="handleAddBudgetLineOnClick(xhr, status, args)" update=":budgetLine:budgetLineTable :addBudgetLineForm:addBudgetPanel" actionListener="#{budgetLineCategoryManagedBean.addBudgetLineToBudgetLineCategory}" icon="pi pi-check"/>
                        <p:commandButton value="Cancel" styleClass="custom-button2" onclick="PF('addBudgetLineDialog').hide();" icon="pi pi-times" update=":addBudgetLineForm:addBudgetPanel"/>
                    </p:outputPanel>
                </p:dialog>

            </h:form>

            <h:form id="addBudgetLineCategoryForm">
                <p:dialog header="Add New Budget Line Category."
                          widgetVar="addBudgetLineCategoryDialog"
                          modal="true"
                          resizable="true"
                          showEffect="fade"
                          hideEffect="fade"
                          closable="true"
                          maximizable="true"
                          minimizable="true"
                          minWidth="800"
                          width="600px"
                          visible="#{facesContext.validationFailed}">
                    <p:outputPanel id="addBudgetLineCategoryPanel" rendered="true">
                        <p:messages id="addBudgetLineCategoryPanelMessages" showDetail="false" closable="true" severity="error, info" showSummary="true">
                            <p:autoUpdate/>
                        </p:messages>
                        <p:panelGrid columns="2" styleClass="custom-grid">
                            <p:outputLabel for="newBudgetLineCategoryName" value="Category Name: "/>
                            <p:inputText id="newBudgetLineCategoryName" value="#{budgetLineCategoryManagedBean.newBudgetLineCategory.categoryName}" required="true" requiredMessage="Category name is required">
                            </p:inputText>
                        </p:panelGrid>

                        <p:commandButton value="Add" action="#{budgetLineCategoryManagedBean.loadBudgetLineCategories}" styleClass="custom-button1" oncomplete="handleAddBudgetLineCategoryOnClick(xhr, status, args)" update=":budgetLine:budgetLineTable :addBudgetLineForm:addBudgetPanel :budgetLineCategoryForm:budgetLineCategoryTable :addBudgetLineCategoryForm:addBudgetLineCategoryPanel :budgetLineCategoryForm:card4" actionListener="#{budgetLineCategoryManagedBean.addBudgetLineCategory}" icon="pi pi-check"/>
                        <p:commandButton value="Cancel" styleClass="custom-button2" update=":addBudgetLineCategoryForm:addBudgetLineCategoryPanel" onclick="PF('addBudgetLineCategoryDialog').hide();" icon="pi pi-times"/>
                    </p:outputPanel>
                </p:dialog>
            </h:form>

            <h:form id="updateBudgetLineCategoryForm">
                <p:dialog header="Edit Budget Line Category Name."
                          widgetVar="editBudgetLineCategoryDialog"
                          modal="true"
                          resizable="true"
                          showEffect="fade"
                          hideEffect="fade"
                          closable="true"
                          maximizable="true"
                          minimizable="true"
                          minWidth="800"
                          width="600px"
                          visible="#{facesContext.validationFailed}">
                    <p:outputPanel id="editBudgetLineCategoryPanel" rendered="true">
                        <p:messages id="editBudgetLineCategoryPanelMessages" showDetail="false" closable="true" severity="error, info" showSummary="true">
                            <p:autoUpdate/>
                        </p:messages>
                        <p:panelGrid columns="2" styleClass="custom-grid">
                            <p:outputLabel for="editedBudgetLineCategoryName" value="Category Name: "/>
                            <p:inputText id="editedBudgetLineCategoryName" value="#{budgetLineCategoryManagedBean.selectedBudgetLineCategory.categoryName}" required="true" requiredMessage="Category name is required">
                            </p:inputText>
                        </p:panelGrid>

                        <p:commandButton value="Edit" action="#{budgetLineCategoryManagedBean.loadBudgetLineCategories}" styleClass="custom-button1" oncomplete="handleEditBudgetLineCategoryOnClick(xhr, status, args)" update=":budgetLine:budgetLineTable :updateBudgetLineCategoryForm:editBudgetLineCategoryPanel :budgetLineCategoryForm:budgetLineCategoryTable" actionListener="#{budgetLineCategoryManagedBean.updateBudgetLineCategory}" icon="pi pi-pencil"/>
                        <p:commandButton value="Cancel" styleClass="custom-button2" onclick="PF('editBudgetLineCategoryDialog').hide();" update=":updateBudgetLineCategoryForm:editBudgetLineCategoryPanel" icon="pi pi-times"/>
                    </p:outputPanel>

                </p:dialog>
            </h:form>

            <h:form id="updateBudgetLineForm">
                <p:dialog header="Edit Budget Line."
                          widgetVar="editBudgetLineDialog"
                          modal="true"
                          resizable="true"
                          showEffect="fade"
                          hideEffect="fade"
                          closable="true"
                          maximizable="true"
                          minimizable="true"
                          minWidth="800"
                          visible="#{facesContext.validationFailed}">
                    <p:outputPanel id="editBudgetLinePanel" rendered="true">
                        <p:messages id="editBudgetLineMessages" showDetail="false" closable="true" severity="error, info" showSummary="true">
                            <p:autoUpdate/>
                        </p:messages>
                        <p:panelGrid columns="2" styleClass="custom-grid">
                            <p:outputLabel for="editBudgetLineName" value="Budget Line Title: "/>
                            <p:inputText id="editBudgetLineName" value="#{budgetLineCategoryManagedBean.selectedBudgetLine.title}" required="true" requiredMessage="Budget Line Title is required" validatorMessage="Invalid Title">
                                <f:validateLength minimum="3" maximum="32"/>
                            </p:inputText>

                            <p:outputLabel for="editBudgetLineAmount" value="Budget Line Amount: "/>
                            <p:inputText id="editBudgetLineAmount" placeholder="UGX..." value="#{budgetLineCategoryManagedBean.selectedBudgetLine.initialAmount}" required="true" requiredMessage="Budget Line Amount is required" validatorMessage="Amount must be a number">
                                <f:convertNumber/>
                            </p:inputText>

                            <p:outputLabel for="editBudgetLineStartDate" value="Start Date: "  />
                            <p:datePicker id="editBudgetLineStartDate" value="#{budgetLineCategoryManagedBean.selectedBudgetLine.startDate}" pattern="dd-MM-yyyy" showOnFocus="true" showTime="false" timeInput="false" required="true" requiredMessage="Budget Line Start Date is required"/>

                            <p:outputLabel for="ediBudgetLineEndDate" value="End Date: "  />
                            <p:datePicker id="ediBudgetLineEndDate" value="#{budgetLineCategoryManagedBean.selectedBudgetLine.endDate}" pattern="dd-MM-yyyy" showOnFocus="true" showTime="false" timeInput="false" required="true" requiredMessage="Budget Line End Date is required"/>

                        </p:panelGrid>

                        <p:commandButton value="Update" styleClass="custom-button1" oncomplete="handleEditBudgetLineOnClick(xhr, status, args)" update=":budgetLine:budgetLineTable :updateBudgetLineForm:editBudgetLinePanel" actionListener="#{budgetLineCategoryManagedBean.updateBudgetLine}" icon="pi pi-check"/>
                        <p:commandButton value="Cancel" styleClass="custom-button2" onclick="PF('editBudgetLineDialog').hide();" icon="pi pi-times" update=":updateBudgetLineForm:editBudgetLinePanel"/>
                    </p:outputPanel>
                </p:dialog>
            </h:form>

            <h:form id="reviewBudgetLineForm">
                <p:dialog header="Review Budget Line."
                          widgetVar="reviewBudgetLineDialog"
                          modal="true"
                          resizable="true"
                          showEffect="fade"
                          hideEffect="fade"
                          closable="true"
                          maximizable="true"
                          minimizable="true"
                          minWidth="800"
                          width="800px"
                          visible="#{facesContext.validationFailed}">
                <p:outputPanel id="reviewBudgetLinePanel" rendered="true">
                <p:messages id="reviewBudgetLinePanelMessages" showDetail="false" closable="true" severity="error, info" showSummary="true">
                    <p:autoUpdate/>
                </p:messages>
                <h:panelGrid columns="2" styleClass="details-grid">
                    <p:outputLabel for="reviewBudgetLineCategory" value="Category: "/>
                    <h:outputText id="reviewBudgetLineCategory" value="#{budgetLineCategoryManagedBean.selectedBudgetLine.budgetLineCategory.categoryName}"/>

                    <p:outputLabel for="reviewBudgetLineTitle" value="Title: "/>
                    <h:outputText id="reviewBudgetLineTitle" value="#{budgetLineCategoryManagedBean.selectedBudgetLine.title}"/>

                    <p:outputLabel for="reviewBudgetLineAmount" value="Amount: "/>
                    <h:outputText id="reviewBudgetLineAmount" value="#{budgetLineCategoryManagedBean.selectedBudgetLine.initialAmount}"/>

                    <p:outputLabel for="reviewBudgetLineStartDate" value="Start Date: "/>
                    <h:outputText id="reviewBudgetLineStartDate" value="#{budgetLineCategoryManagedBean.selectedBudgetLine.startDate}">
                        <f:convertDateTime pattern="dd-MM-yyyy" timeZone="Africa/Kampala"/>
                    </h:outputText>

                    <p:outputLabel for="reviewBudgetLineEndDate" value="End Date: "/>
                    <h:outputText id="reviewBudgetLineEndDate" value="#{budgetLineCategoryManagedBean.selectedBudgetLine.endDate}">
                        <f:convertDateTime pattern="dd-MM-yyyy" timeZone="Africa/Kampala"/>
                    </h:outputText>

                </h:panelGrid>

                    <p:commandButton value="Approve" rendered="#{budgetLineCategoryManagedBean.selectedBudgetLine.status == 'DRAFT' and loginBean.hasPermission('APPROVE_BUDGET_LINE') }" styleClass="custom-button1" icon="pi pi-check" onclick="PF('reviewBudgetLineDialog').hide()" actionListener="#{budgetLineCategoryManagedBean.approveBudgetLine}" update=":budgetLine:budgetLineTable :budgetLineCategoryForm:card2 :budgetLineCategoryForm:card3"/>
                    <p:commandButton value="Reject" rendered="#{budgetLineCategoryManagedBean.selectedBudgetLine.status == 'DRAFT' and loginBean.hasPermission('REJECT_BUDGET_LINE')}" styleClass="custom-button2" icon="pi pi-times" onclick="PF('reviewBudgetLineDialog').hide()" actionListener="#{budgetLineCategoryManagedBean.rejectBudgetLine}" update=":budgetLine:budgetLineTable"/>
                    <p:commandButton value="Print" rendered="#{budgetLineCategoryManagedBean.selectedBudgetLine.status != 'EXPIRED' }" type="button" icon="pi pi-print" styleClass="custom-button3">
                        <p:printer target="reviewBudgetLinePanel"/>
                    </p:commandButton>

                </p:outputPanel>
                </p:dialog>
            </h:form>
        </div>
    </ui:define>
</ui:composition>