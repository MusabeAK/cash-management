<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/pages/template/template.xhtml">
    <ui:define name="content" class="form-container">
        <script type="text/javascript">
            function handleCreateRequisitionOnClick(xhr, status, args) {
                if (!args.validationFailed) {
                    PF('createRequisitionDialog').hide();
                }
            }
            function handleUpdateRequisitionOnClick(xhr, status, args) {
                if (!args.validationFailed) {
                    PF('updateRequisitionDialog').hide();
                }
            }
            function handleAddAccountabilityOnClick(xhr, status, args) {
                if (!args.validationFailed) {
                    PF('addAccountabilityDialog').hide();
                }
            }
            function start() {
                PF('statusDialog').show();
            }

            function stop() {
                PF('statusDialog').hide();
            }

        </script>
        <style type="text/css">
            .details-grid {
                width: 100%;
                margin-bottom: 20px;
            }

            .details-grid td {
                padding: 15px 10px;
            }

            .details-grid .ui-outputtext {
                margin-bottom: 10px;
            }

            .details-grid tr {
                height: 30px;
            }

            .full-width-panel {
                width: 100%;
                box-sizing: border-box;
                border: 1px solid #ddd;
                border-radius: 3px;
                margin-bottom: 20px;
                padding: 10px 10px 30px;
            }

            .panel-header {
                display: block;
                text-align: center;
                align-items: center;
                font-weight: bold;
                margin-bottom: 15px;
                text-decoration: underline;
            }

            .pipeline {
                width: 100%;
                position: relative;
            }

            .custom-progress {
                width: 100% !important;
                height: 20px !important;
            }

            .status-container {
                display: flex;
                justify-content: space-between;
                position: relative;
                height: 20px;
                margin-top: 5px;
            }

            .status {
                position: relative;
                text-align: center;
                font-size: 12px;
                width: 25%;
            }
        </style>
        <f:event type="preRenderComponent" listener="#{navigationBean.updateActivePage}" />

        <h:panelGroup layout="block" styleClass="top-bar">
            <span class="menu-icon" onclick="toggleNav()">&#9776;</span>
            <h:outputText value="My Requisitions" styleClass="top-bar-title" />
        </h:panelGroup>
        <div class="content">
            <h:form id="userRequisitions" style="margin-top: 30px">
                <h:panelGroup id="userRequisitionsTable" rendered="#{loginBean.hasPermission('VIEW_REQUISITIONS')}">
                    <div class="search-container">
                        <h3>My requisitions</h3>
                        <div class="search-and-filter">
                            <div class="search">
                                <p:inputText id="searchBar" value="#" styleClass="search-bar" placeholder="Search...">
                                    <p:ajax event="keyup" />
                                </p:inputText>
                            </div>
                        </div>
                    </div>

                    <div class="table-header">
                        <h:outputText value="10 Requisition(s)" styleClass="total-users"/>
                        <div class="table-header-buttons">
                            <p:commandButton icon="pi pi-user-plus" value="Make Requisition" styleClass="add-button" oncomplete="PF('createRequisitionDialog').show()" update=":userRequisitions:userRequisitionsTable :createRequisition:createRequisitionPanel"/>

                            <p:commandButton icon="pi pi-trash" update=":userRequisitions:userRequisitionsTable" value="Delete All" action="#" styleClass="delete-all-button">
                                <p:confirm header="Confirm Deletion" message="Do you want to delete all Requisitions?"
                                           icon="pi pi-info-circle"/>
                            </p:commandButton>
                        </div>
                    </div>

                    <p:dataTable value="#{requisitionBean.userRequisitions}"
                                 var="requisition"
                                 rendered="#{loginBean.hasPermission('VIEW_REQUISITIONS')}"
                                 selectionMode="single"
                                 selection="#{requisitionBean.selectedRequisition}"
                                 rowKey="#{requisition.id}"
                                 paginator="true"
                                 rows="5"
                                 id="myRequisitionsTable"
                                 paginatorPosition="bottom">
                        <p:ajax event="rowSelect" process="myRequisitionsTable" listener="#{requisitionBean.rowSelect}" update=":requisitionDetailsForm:requisitionDetailsPanel" oncomplete="PF('requisitionDetailsDialog').show(); console.log('Dialog shown, selected requisition:', #{requisitionBean.selectedRequisition != null});" />
                        <p:column headerText="Id">
                            <h:outputText value="#{requisition.id}"/>
                        </p:column>
                        <p:column headerText="Reason">
                            <h:outputText value="#{requisition.subject}"/>
                        </p:column>
                        <p:column headerText="Amount">
                            <h:outputText value="#{requisition.amount}"/>
                        </p:column>
                        <p:column headerText="Date Needed">
                            <h:outputText value="#{requisition.dateNeeded}">
                                <f:convertDateTime pattern="dd-MM-yyyy" timeZone="Africa/Kampala"/>
                            </h:outputText>
                        </p:column>
                        <p:column headerText="Status">
                            <h:outputText value="#{requisition.status}"/>
                        </p:column>
                        <p:column headerText="Comment">
                            <h:outputText value="#{requisition.comment}"/>
                        </p:column>
                        <p:column headerText="Actions">
                            <p:commandButton icon="pi pi-pencil"  rendered="#{loginBean.hasPermission('EDIT_REQUISITION') and requisition.status == 'DRAFT'}" styleClass="edit-button" action="#{requisitionBean.selectRequisition(requisition)}" oncomplete="PF('updateRequisitionDialog').show()" update=":userRequisitions:userRequisitionsTable :updateRequisition:updateRequisitionPanel"/>

                            <p:commandButton icon="pi pi-trash" rendered="#{requisition.status == 'DRAFT' or requisition.status == 'REJECTED'}" action="#{requisitionBean.deleteRequisition(requisition)}" update=":userRequisitions:userRequisitionsTable" title="Delete" styleClass="delete-button" style="color:red" >
                                <p:confirm header="Confirm Deletion" message="Do you want to delete this requisition?"
                                           icon="pi pi-info-circle"/>
                            </p:commandButton>

                            <p:commandButton value="Accountability" rendered="#{requisition.status == 'DISBURSED' and requisition.accountability == null}" action="#{accountabilityBean.selectRequisition(requisition)}" update=":userRequisitions:userRequisitionsTable :addAccountability:addAccountabilityPanel" oncomplete="PF('addAccountabilityDialog').show()" style="background-color: #32de84; border-color: #32de84;"/>
                            <p:commandButton value="Accountability" rendered="#{requisition.status == 'DISBURSED' and requisition.accountability != null}" action="#{accountabilityBean.selectRequisition(requisition)}" update=":userRequisitions:userRequisitionsTable :viewAccountability:viewAccountabilityPanel" oncomplete="PF('viewAccountabilityDialog').show()"/>

                        </p:column>
                    </p:dataTable>

                </h:panelGroup>
            </h:form>

            <!-- Dialogs -->

            <h:form id="createRequisition">
                <p:dialog header="Create a Requisition"
                          widgetVar="createRequisitionDialog"
                          modal="true"
                          resizable="true"
                          showEffect="fade"
                          hideEffect="fade"
                          closable="true"
                          width="800px"
                          visible="#{facesContext.validationFailed}">
                    <p:outputPanel id="createRequisitionPanel" rendered="true">
                    <p:messages id="createRequisitionPanelMessages" showDetail="false" closable="true" severity="error, info" showSummary="true">
                        <p:autoUpdate/>
                    </p:messages>
                        <p:panelGrid columns="2" styleClass="custom-grid">
                            <p:outputLabel for="subject" >Reason: </p:outputLabel>
                            <p:inputText id="subject" value="#{requisitionBean.newRequisition.subject}" required="true" requiredMessage="Add a reason for your requisition">
                            </p:inputText>

                            <p:outputLabel for="description">Description: </p:outputLabel>
                            <p:inputText id="description" value="#{requisitionBean.newRequisition.description}" required="true" requiredMessage="Add a description for your requisition">
                            </p:inputText>

                            <p:outputLabel for="amount">Amount: </p:outputLabel>
                            <p:inputText id="amount" placeholder="UGX..." value="#{requisitionBean.newRequisition.amount}" required="true" requiredMessage="No amount given" validatorMessage="Amount should be a number">
                                <f:convertNumber/>
                            </p:inputText>

                            <p:outputLabel for="budgetLineName" value="Budget Line: "/>
                            <p:autoComplete id="budgetLineName" value="#{requisitionBean.budgetLineName}" completeMethod="#{requisitionBean.searchBudgetLines}" required="true" requiredMessage="Select a budget line">
                            </p:autoComplete>

                            <p:outputLabel for="editBudgetLineStartDate" value="Date Needed: "  />
                            <p:datePicker id="editBudgetLineStartDate" value="#{requisitionBean.newRequisition.dateNeeded}" pattern="dd-MM-yyyy" showOnFocus="true" showTime="false" timeInput="false" required="true" requiredMessage="Please add a date when you need this requisition"/>
                        </p:panelGrid>

                        <p:commandButton value="Create" oncomplete="handleCreateRequisitionOnClick(xhr, status, args)" actionListener="#{requisitionBean.makeRequisition}" icon="pi pi-check" update=":userRequisitions:userRequisitionsTable"/>
                        <p:commandButton value="Cancel" onclick="PF('createRequisitionDialog').hide()" icon="pi pi-times"/>
                    </p:outputPanel>
                </p:dialog>
            </h:form>

            <h:form id="updateRequisition">
                <p:dialog header="Submit/Edit your requisition"
                          widgetVar="updateRequisitionDialog"
                          modal="true"
                          resizable="true"
                          showEffect="fade"
                          hideEffect="fade"
                          closable="true"
                          width="800px"
                          visible="#{facesContext.validationFailed}">
                    <p:outputPanel id="updateRequisitionPanel" rendered="true">
                        <p:messages id="updateRequisitionPanelMessages" showDetail="false" closable="true" severity="error, info" showSummary="true">
                            <p:autoUpdate/>
                        </p:messages>
                        <p:panelGrid columns="2" styleClass="custom-grid">
                            <p:outputLabel for="editRequisitionSubject" value="Reason: "/>
                            <p:inputText id="editRequisitionSubject" value="#{requisitionBean.selectedRequisition.subject}" required="true" requiredMessage="Please add your reason">

                            </p:inputText>

                            <p:outputLabel for="editRequisitionAmount" value="Amount"/>
                            <p:inputText id="editRequisitionAmount" placeholder="UGX..." value="#{requisitionBean.selectedRequisition.amount}" required="true" requiredMessage="Please add an amount for your requisition" validatorMessage="Amount should be a number">
                                <f:convertNumber/>
                            </p:inputText>

                            <p:outputLabel for="editRequisitionDescription" value="Description"/>
                            <p:inputTextarea id="editRequisitionDescription" value="#{requisitionBean.selectedRequisition.description}" required="true" requiredMessage="Add a description for your requisition">

                            </p:inputTextarea>

                            <p:outputLabel for="editRequisitionDateNeeded" value="Date Needed"/>
                            <p:datePicker id="editRequisitionDateNeeded" value="#{requisitionBean.selectedRequisition.dateNeeded}" pattern="dd-MM-yyyy" showOnFocus="true" showTime="false" timeInput="false" required="true" requiredMessage="Please select a date for when you need your requisition"/>

                        </p:panelGrid>

                        <p:commandButton value="Submit" oncomplete="handleUpdateRequisitionOnClick(xhr, status, args)" actionListener="#{requisitionBean.submitRequisition}" icon="pi pi-check" update=":userRequisitions:userRequisitionsTable" />
                        <p:commandButton value="Update" oncomplete="handleUpdateRequisitionOnClick(xhr, status, args)" actionListener="#{requisitionBean.updateRequisition}" icon="pi pi-check" update=":userRequisitions:userRequisitionsTable"/>
                        <p:commandButton value="Cancel" onclick="PF('updateRequisitionDialog').hide()" icon="pi pi-times"/>
                    </p:outputPanel>
                </p:dialog>
            </h:form>

            <h:form id="addAccountability" enctype="multipart/form-data">
                <p:dialog header="Accountability"
                          widgetVar="addAccountabilityDialog"
                          modal="true"
                          resizable="true"
                          showEffect="fade"
                          hideEffect="fade"
                          closable="true"
                          width="800px"
                          visible="#{facesContext.validationFailed}">
                    <p:outputPanel id="addAccountabilityPanel" rendered="true">
                        <p:messages id="addAccountabilityPanelMessages" showDetail="false" closable="true" severity="error, info" showSummary="true">
                            <p:autoUpdate/>
                        </p:messages>
                        <p:panelGrid columns="2" styleClass="custom-grid">
                            <p:outputLabel for="accountabilityDescription" value="Description: ">
                                <p:inputTextarea id="accountabilityDescription" value="#{accountabilityBean.newAccountability.description}" required="true">

                                </p:inputTextarea>
                            </p:outputLabel>

                            <p:outputLabel for="accountabilityAmountUsed" value="Amount Used: ">
                                <p:inputText id="accountabilityAmountUsed" placeholder="UGX..." value="#{accountabilityBean.newAccountability.amountUsed}" required="true" requiredMessage="Please enter the amount you used" validatorMessage="Amount should be a number">
                                    <f:convertNumber/>
                                </p:inputText>
                            </p:outputLabel>

                            <p:outputLabel for="accountabilityImage" value="Image ">
                                <p:fileUpload id="accountabilityImage" value="#{accountabilityBean.uploadedFile}"
                                              mode="simple" skinSimple="true" allowTypes="/(\.|\/)(gif|jpe?g|png)$/" required="true" requiredMessage="Please add an image backing your accountability">
                                </p:fileUpload>
                            </p:outputLabel>

                        </p:panelGrid>

                        <p:commandButton value="Add" update=":userRequisitions:userRequisitionsTable" actionListener="#{accountabilityBean.addAccountability}" oncomplete="handleAddAccountabilityOnClick(xhr, status, args)" icon="pi pi-check"/>
                        <p:commandButton value="Cancel" onclick="PF('addAccountabilityDialog').hide()" icon="pi pi-times"/>
                    </p:outputPanel>
                </p:dialog>
            </h:form>

            <h:form id="viewAccountability">
                <p:dialog header="View accountability for requisition #{accountabilityBean.selectedRequisition.id}"
                          widgetVar="viewAccountabilityDialog"
                          modal="true"
                          resizable="true"
                          showEffect="fade"
                          hideEffect="fade"
                          closeOnEscape="true"
                          width="800px"
                          visible="#{facesContext.validationFailed}">
                    <p:outputPanel id="viewAccountabilityPanel" rendered="#{accountabilityBean.selectedAccountability != null}">
                        <p:messages id="viewAccountabilityPanelMessages" showDetail="false" closable="true" severity="error, info" showSummary="true">
                            <p:autoUpdate/>
                        </p:messages>
                        <p:panelGrid columns="2" styleClass="custom-grid">
                            <p:outputLabel for="accountabilityDescriptionView" value="Reason: "/>
                            <h:outputText id="accountabilityDescriptionView" value="#{accountabilityBean.selectedAccountability.description}">
                            </h:outputText>

                            <p:outputLabel for="accountabilityAmountView" value="Amount Used: "/>
                            <h:outputText id="accountabilityAmountView" value="#{accountabilityBean.selectedAccountability.amountUsed}"/>

                            <p:outputLabel for="accountabilityImageView" value="Image: "/>
                            <p:commandButton id="accountabilityImageView" value="Download Image"
                                             ajax="false"
                                             onclick="PrimeFaces.monitorDownload(start, stop);"
                                             icon="pi pi-download"
                                             rendered="#{accountabilityBean.selectedAccountability != null and accountabilityBean.selectedAccountability.image != null}">
                                <p:fileDownload value="#{accountabilityBean.imageDownload}" />
                            </p:commandButton>

                        </p:panelGrid>

                    </p:outputPanel>
                </p:dialog>
            </h:form>

            <h:form id="requisitionDetailsForm">
                <p:dialog header="Requisition Details"
                          widgetVar="requisitionDetailsDialog"
                          modal="true"
                          width="800px"
                          fitViewport="true"
                          id="requisitionDetailsDialog">
                    <p:outputPanel id="requisitionDetailsPanel">
                        <h:outputText value="No requisition selected" rendered="#{requisitionBean.selectedRequisition == null}" />
                    <h:panelGroup columns="2" rendered="#{requisitionBean.selectedRequisition != null}" layout="block">

                        <h:panelGroup layout="block" styleClass="full-width-panel" rendered="#{requisitionBean.selectedRequisition.status != 'REJECTED'}">
                            <h:outputText styleClass="panel-header" value="Status"/>
                            <div class="pipeline">
                                <div class="status-container">
                                    <div class="status">Submitted</div>
                                    <div class="status">Reviewed</div>
                                    <div class="status">Approved</div>
                                    <div class="status">Disbursed</div>
                                </div>
                                <div class="progress-bar">
                                    <p:progressBar value="#{requisitionBean.overallProgress}" styleClass="custom-progress"/>
                                </div>
                            </div>
                        </h:panelGroup>
                        <h:panelGrid columns="2" styleClass="details-grid">
                        <h:outputText value="Id:" />
                        <h:outputText value="#{requisitionBean.selectedRequisition.id}" />

                        <h:outputText value="Reason:" />
                        <h:outputText value="#{requisitionBean.selectedRequisition.subject}" />

                        <h:outputText value="Description: "/>
                        <h:outputText value="#{requisitionBean.selectedRequisition.description}"/>

                        <h:outputText value="Amount:" />
                        <h:outputText value="#{requisitionBean.selectedRequisition.amount}" />

                        <h:outputText value="Date Needed:" />
                        <h:outputText value="#{requisitionBean.selectedRequisition.dateNeeded}">
                            <f:convertDateTime pattern="dd-MM-yyyy" timeZone="Africa/Kampala"/>
                        </h:outputText>

                        <h:outputText rendered="#{requisitionBean.selectedRequisition.comment != null and requisitionBean.selectedRequisition.comment != ''}" value="Comment:" />
                        <h:outputText rendered="#{requisitionBean.selectedRequisition.comment != null and requisitionBean.selectedRequisition.comment != ''}" value="#{requisitionBean.selectedRequisition.comment}" />


                        </h:panelGrid>


                    </h:panelGroup>
                    </p:outputPanel>
                </p:dialog>
            </h:form>

        </div>
    </ui:define>
</ui:composition>
